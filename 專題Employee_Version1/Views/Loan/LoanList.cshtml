@model 專題Employee_Version1.Models.ViewModels.LoanViewModel


@{
    ViewBag.Title = "LoanList";
}

@section styles{
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

}
<div class="row">

    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex align-items-center">
                    <h4 class="card-title">貸款商品總覽</h4>
                    <button class="btn btn-primary btn-round ms-auto"
                            data-bs-toggle="modal"
                            data-bs-target="#addRowModal">
                        <i class="fa fa-plus"></i>
                        增加商品
                    </button>
                </div>
            </div>
            <div class="card-body">
                <!-- Modal -->
                <div class="modal fade" id="addRowModal" tabindex="-1" aria-labelledby="addRowModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addRowModalLabel">增加商品</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                @using (Html.BeginForm("CreateProduct", "Loan", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.ProductName, "產品名稱", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewLoanProductViewModel.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.ProductName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.InterestRate, "利率", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewLoanProductViewModel.InterestRate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.InterestRate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.LoanTerm, "貸款期限(月)", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewLoanProductViewModel.LoanTerm, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.LoanTerm, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.MaxLoanAmount, "最大貸款額度", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewLoanProductViewModel.MaxLoanAmount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.MaxLoanAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.MinLoanAmount, "最小貸款額度", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewLoanProductViewModel.MinLoanAmount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.MinLoanAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.ProductDescription, "產品描述", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewLoanProductViewModel.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.ProductDescription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewLoanProductViewModel.ImageFile, "產品圖片", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.NewLoanProductViewModel.ImageFile, new { @class = "form-control", type = "file" })
                                            @Html.ValidationMessageFor(model => model.NewLoanProductViewModel.ImageFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <!-- Add more fields as necessary -->
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                                        <button type="submit" class="btn btn-primary">保存</button>
                                        <a id="testData"  href="#" >測試資料</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>


                <div class="table-responsive">
                    <table id="add-row"
                           class="display table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ProductName</th>
                                <th>InterestRate</th>
                                <th>LoanTerm</th>
                                <th>MaxLoanAmount</th>
                                <th>MinLoanAmount</th>
                                <th>ProductDescription</th>
                                <th>ImageFileName</th>

                                <th style="width: 10%">Action</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>ProductName</th>
                                <th>InterestRate</th>
                                <th>LoanTerm</th>
                                <th>MaxLoanAmount</th>
                                <th>MinLoanAmount</th>
                                <th>ProductDescription</th>
                                <th>ImageFileName</th>
                            </tr>
                        </tfoot>
                        <tbody>
                            @foreach (var item in Model.LoanProducts)
                            {

                                <tr>
                                    <td>@item.ProductName</td>
                                    <td>@item.InterestRate</td>
                                    <td>@item.LoanTerm</td>
                                    <td>@item.MaxLoanAmount.ToString("N0")</td>
                                    <td>@item.MinLoanAmount.ToString("N0")</td>
                                    <td>@item.ProductDescription</td>
                                    <td>
                                        <a href="https://sean861226.blob.core.windows.net/sharefolder/@item.ImageFileName", download>
                                            @item.ImageFileName
                                        </a>
                                    </td>



                                    <td>
                                        <div class="form-button-action">
                                            <button type="button"
                                                    data-bs-toggle="tooltip"
                                                    title=""
                                                    class="btn btn-link btn-primary btn-lg"
                                                    data-original-title="Edit Task"
                                                    onclick="location.href='@Url.Action("Edit", "Loan", new { id = item.LoanProductID })'">
                                                <i class="fa fa-edit"></i>
                                            </button>
                                            <button type="button"
                                                    data-bs-toggle="tooltip"
                                                    title=""
                                                    class="btn btn-link btn-danger"
                                                    data-original-title="Remove"
                                                    onclick="confirmDelete('@Url.Action("Delete", "Loan", new { id = item.LoanProductID })')">
                                                <i class="fa fa-times"></i>
                                            </button>
                                            @*<button type="button"
                        data-bs-toggle="tooltip"
                        title=""
                        class="btn btn-link btn-danger"
                        data-original-title="Remove">
                    <i class="fa fa-times"></i>
                </button>*@
                                        </div>
                                    </td>
                                </tr>
                            }


                        </tbody>
                    </table>
                    @*<a href="@Url.Action("Create", "Loan")" class="btn btn-warning">新增商品</a>*@

                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="../assets/js/core/jquery-3.7.1.min.js"></script>
    <script src="../assets/js/core/popper.min.js"></script>
    <script src="../assets/js/core/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>


    <!-- jQuery Scrollbar -->
    <script src="../assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <!-- Datatables -->
    <script src="../assets/js/plugin/datatables/datatables.min.js"></script>
    <!-- Kaiadmin JS -->
    <script src="../assets/js/kaiadmin.min.js"></script>
    <!-- Kaiadmin DEMO methods, don't include it in your project! -->
    <script src="../assets/js/setting-demo2.js"></script>
    <script>
        $(document).ready(function () {
            $('#autoFillLink2').click(function (e) {
                e.preventDefault();

                $('#NewLoanProductViewModel_ProductName').val('測試產品');
                $('#NewLoanProductViewModel_InterestRate').val('8');
                $('#NewLoanProductViewModel_LoanTerm').val('48');
                $('#NewLoanProductViewModel_MaxLoanAmount').val('1000000');
                $('#NewLoanProductViewModel_MinLoanAmount').val('10000');
                $('#NewLoanProductViewModel_ProductDescription').val('這是測試產品');
            });

            $("#basic-datatables").DataTable({});

            $("#multi-filter-select").DataTable({
                pageLength: 5,
                initComplete: function () {
                    this.api()
                        .columns()
                        .every(function () {
                            var column = this;
                            var select = $('<select class="form-select"><option value=""></option></select>')
                                .appendTo($(column.footer()).empty())
                                .on("change", function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());

                                    column
                                        .search(val ? "^" + val + "$" : "", true, false)
                                        .draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append('<option value="' + d + '">' + d + "</option>");
                                });
                        });
                },
            });

            // Add Row
            $("#add-row").DataTable({
                pageLength: 5,
            });

            var action =
                '<td> <div class="form-button-action"> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';

            $("#addRowButton").click(function () {
                $("#add-row")
                    .dataTable()
                    .fnAddData([
                        $("#addName").val(),
                        $("#addPosition").val(),
                        $("#addOffice").val(),
                        action,
                    ]);
                $("#addRowModal").modal("hide");
            });
        });

        function confirmDelete(deleteUrl) {
            Swal.fire({
                title: '確定刪除?',
                text: "您將無法恢復此狀態！",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.href = deleteUrl;
                }
            });
        }


    </script>
}